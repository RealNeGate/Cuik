extra (A64Op)

// Hello
pat (TB_F32CONST $root value=$value) => (TB_ICONST dt=TB_TYPE_I32 $root value="*(uint32_t*) &$value")
pat (TB_F64CONST $root value=$value) => (TB_ICONST dt=TB_TYPE_I32 $root value="*(uint64_t*) &$value")

// a64 doesn't have rotate left
pat (TB_ROL dt=$dt ___ $lhs $rhs) =>
	(TB_ROR dt=$dt ___
		$lhs
		(TB_SUB dt=$dt ___
			(TB_ICONST dt=$dt "f->root_node" value="tb_data_type_bit_size(f->super.module, $dt.type)")
			$rhs))

// a64 doesn't have modulo
pat (TB_UMOD dt=$dt ___ $lhs $rhs) =>
	(TB_SUB dt=$dt ___
		$lhs
		(TB_MUL dt=$dt ___
			$rhs
			(TB_UDIV dt=$dt ___ $lhs $rhs)))
pat (TB_SMOD dt=$dt ___ $lhs $rhs) =>
	(TB_SUB dt=$dt ___
		$lhs
		(TB_MUL dt=$dt ___
			$rhs
			(TB_SDIV dt=$dt ___ $lhs $rhs)))

node (add_imm12)
// pat (TB_ADD dt=$dt ___ $a (TB_ICONST ... value=$b)) where "($b == ($b & 07777)) || ($b == ($b & 077770000))" => (a64_add_imm12 dt=$dt ___ $a imm=$b)

node (call)
pat (TB_CALL $ctrl $mem $target $REST) => (a64_call dt=TB_TYPE_TUPLE $ctrl $mem $REST sym="TB_NODE_GET_EXTRA_T($target, TB_NodeSymbol)->sym")
